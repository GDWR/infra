#!/usr/bin/env bash
set -e

function usage() {
  echo "Usage: $0 [OPTION]..." 1>&2;
  echo "Build and run a master & node as qemu vms." 1>&2;
  echo "" 1>&2;
  echo "  -n    number of nodes to run (default 1)" 1>&2;
  echo "  -m    number of masters to run (default 1)" 1>&2;
  echo "  -c    cleanup previous disks if they exist before starting" 1>&2;
  echo "          this indiscriminately removes all *.qcow2" 1>&2;
  echo "          in the directory we create them via this script" 1>&2;
  echo "  -h    display this help and exit" 1>&2;
  exit 1;
}

function random_mac() {
    hexdump -n 6 -ve '1/1 "%.2x "' /dev/random | awk -v a="2,6,a,e" -v r="$RANDOM" 'BEGIN{srand(r);}NR==1{split(a,b,",");r=int(rand()*4+1);printf "%s%s:%s:%s:%s:%s:%s\n",substr($1,0,1),b[r],$2,$3,$4,$5,$6}'
}

function ensure_number() {
    if ! [[ $1 =~ ^[1-9][0-9]*$ ]]; then
        echo $2 1>&2;
        usage 
    fi
}

NUM_MASTERS=1
NUM_NODES=1
CLEAN_DISKS=false
while getopts "n:m:ch" opt; do
  case $opt in
    n) 
        ensure_number $OPTARG "number of nodes must be a positive, non-zero integer.";
        NUM_NODES=$OPTARG;
        ;;
    m) 
        ensure_number $OPTARG "number of nodes must be a positive, non-zero integer.";
        NUM_MASTERS=$OPTARG;
        ;;
    c) CLEAN_DISKS=true ;;
    h) usage ;;
    *) usage ;;
  esac
done

# We could track if we created the disk and cleanup at the end, but I'm lazy.
if [ $CLEAN_DISKS = true ]; then
    rm -f *.qcow2
fi

ROUTER_VM_EXEC=$(nix build .#nixosConfigurations.router.config.formats.vm --print-out-paths --no-link)/run-router-vm
MASTER_VM_EXEC=$(nix build .#nixosConfigurations.master.config.formats.vm --print-out-paths --no-link)/run-master-vm
NODE_VM_EXEC=$(nix build .#nixosConfigurations.node.config.formats.vm --print-out-paths --no-link)/run-node-vm

NIX_DISK_IMAGE="./router.qcow2" QEMU_OPTS="-net nic,macaddr=$(random_mac) -net socket,mcast=230.0.0.1:1234" $ROUTER_VM_EXEC &

for i in $(seq 1 $NUM_MASTERS); do
    NIX_DISK_IMAGE="./master_$i.qcow2" QEMU_OPTS="-net nic,macaddr=$(random_mac) -net socket,mcast=230.0.0.1:1234" $MASTER_VM_EXEC &
done

for i in $(seq 1 $NUM_NODES); do
    NIX_DISK_IMAGE="./node_$i.qcow2" QEMU_OPTS="-net nic,macaddr=$(random_mac) -net socket,mcast=230.0.0.1:1234" $NODE_VM_EXEC &
done

wait